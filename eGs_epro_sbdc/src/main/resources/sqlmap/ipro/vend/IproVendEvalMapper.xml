<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 * 협력사관리 > 협력사평가
 *
 * <pre>
 *    IproVendEvalMapper.xml.xml
 * 
 * </pre>
 * @date : 2018. 02. 19.
 * @version : 1.0
 * @author : 은우소프트 홍찬일
-->
<mapper namespace="com.eunwoosoft.ipro.vend.dao.IproVendEvalDao">	
	<!-- 
   	 * <pre>
     * 1. 개요 : 평가분야 등록
     * 2. 처리내용 :
     *  	TABLE : T_EV_CODE1(평가분야 정보)
     * </pre>
     * @Query ID : insertT_Ev_Code1
	 * @date : 2018. 02. 19.
	 * @author : 은우소프트 홍찬일
     * @history : 
     *  ====================================================================
     *  변경일             		작성자                     		변경내용  
     *  ====================================================================
	 *	2018. 02. 19.		  은우소프트 홍찬일	  				최초 작성 
     *  ====================================================================   
	-->

	<insert id="insertT_Ev_Code1">
		<selectKey keyProperty="ev_code1" resultType="string" order="BEFORE">
			<if test='gbn == "EGP"'>
				SELECT 'EGP'||LPAD(NVL(MAX(SUBSTR(EV_CODE1,4)),0)+1,4,'0') AS ev_code1
				FROM   T_EV_CODE1
				WHERE 1=1
				AND EV_CODE1 LIKE 'EGP' || '%'
			</if>
			<if test='gbn != "EGP"'>
				SELECT 'EG'||LPAD(NVL(MAX(SUBSTR(EV_CODE1,3)),0)+1,4,'0') AS ev_code1
				FROM   T_EV_CODE1
				WHERE 1=1
				AND EV_CODE1 NOT LIKE 'EGP' || '%'
			</if>
			AND ORG_ID = #{orgId, jdbcType=INTEGER}
		</selectKey>
		INSERT INTO T_EV_CODE1 (
			 EV_CODE1
			,ORG_ID
			,EV_NAME1
			,EV_GUBUN1
			,DIST_SCORE
			,REMARK
			,DEPT_SG_CODE
			,DEPT_SG_NAME
			,USE_YN
			,EV_GUBUN2
		) VALUES(
			 #{ev_code1, jdbcType=VARCHAR}
			,#{orgId, jdbcType=INTEGER}
			,#{ev_name1, jdbcType=VARCHAR}
			,#{ev_gubun1, jdbcType=VARCHAR}
			,#{dist_score, jdbcType=INTEGER}
			,#{remark, jdbcType=VARCHAR}
			,#{dept_sg_code, jdbcType=VARCHAR}
			,(F_CDVAL_INQIRE('N00001', NVL(#{dept_sg_code, jdbcType=VARCHAR},'')))
			,#{use_yn, jdbcType=VARCHAR}
			,#{ev_gubun2, jdbcType=VARCHAR}
		)
	</insert>
	<!-- 
   	 * <pre>
     * 1. 개요 : 평가항목 등록
     * 2. 처리내용 :
     *  	TABLE : T_EV_CODE2(평가항목 정보)
     * </pre>
     * @Query ID : insertT_Ev_Code2
	 * @date : 2018. 02. 19.
	 * @author : 은우소프트 홍찬일
     * @history : 
     *  ====================================================================
     *  변경일             		작성자                     		변경내용  
     *  ====================================================================
	 *	2018. 02. 19.		  은우소프트 홍찬일	  				최초 작성 
     *  ====================================================================   
	-->

	<insert id="insertT_Ev_Code2">
		<selectKey keyProperty="ev_code2" resultType="String" order="BEFORE">
				<if test='ev_code2 == "" or ev_code2 == null '>
					SELECT #{gbn, jdbcType=VARCHAR}||LPAD(NVL(MAX(SUBSTR(EV_CODE2,3)),0)+1,4,'0') AS ev_code2
					FROM  T_EV_CODE2
					WHERE 1=1
					<if test='ev_code1 != "" and ev_code1 != null'>
						AND EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
					</if>
				</if>
				<if test='ev_code2 != "" and ev_code2 != null '>
					SELECT #{ev_code2, jdbcType=VARCHAR} AS ev_code2
					FROM DUAL 
				</if>
		</selectKey>
		INSERT INTO T_EV_CODE2 (
			 EV_CODE1
			,EV_CODE2
			,EV_NAME2
			,DIST_SCORE
			,REMARK
			,ORG_ID
		) VALUES (
			 #{ev_code1, jdbcType=VARCHAR}
			,#{ev_code2, jdbcType=VARCHAR}
			,#{ev_name2, jdbcType=VARCHAR}
			,#{dist_score, jdbcType=INTEGER}
			,#{remark, jdbcType=VARCHAR}
			,#{orgId, jdbcType=INTEGER}
		)
	</insert>
	<sql id="vendEvalStndList">
		SELECT *
		FROM(
			SELECT ROWNUM AS SEQ
							,EV_CODE1
							,EV_NAME1
							,DIST_SCORE
							,EV_GUBUN1
							,EV_GUBUN1_NM
							,REMARK
							,USE_YN
							,USE_YN_NM
							,DEPT_SG_CODE
							,DEPT_SG_NAME
							,EV_GUBUN2
							,ORG_ID
			FROM(
					SELECT	 EV_CODE1
							,EV_NAME1
							,DIST_SCORE
							,EV_GUBUN1
							,F_CDVAL_INQIRE('N00002', NVL(EV_GUBUN1, 'A')) AS EV_GUBUN1_NM
							,REMARK
							,USE_YN
							,F_CDVAL_INQIRE('N00004', NVL(USE_YN, '')) AS USE_YN_NM
							,DEPT_SG_CODE
							,DEPT_SG_NAME
							,EV_GUBUN2
							,ORG_ID
					FROM	T_EV_CODE1
				)
			)
	</sql>
	<sql id="vendEvalStndListWhere">
		<where>
			<if test='ev_code1 != "" and ev_code1 != null '>
				AND		UPPER(EV_CODE1) like UPPER('%' || #{ev_code1, jdbcType=VARCHAR} || '%')
			</if>
			<if test='ev_name1 != "" and ev_name1 != null '>
				AND		UPPER(EV_NAME1) like UPPER('%' || #{ev_name1, jdbcType=VARCHAR} || '%')
			</if>
			<if test='use_yn != "" and use_yn != null '>
				AND		USE_YN = #{use_yn, jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	
	<!--  
     * <pre>
     
     * 1. 개요 : 평가분야 목록조회
     * 2. 처리내용 :
     * </pre>
     -->
     
	<select id="vendEvalStndListInqireWithPgng" resultType="dataEntity">
		<include refid="ComPgng.pgngHeaderClause"/>
		SELECT * FROM (
			<include refid="vendEvalStndList"/>
			<include refid="vendEvalStndListWhere"/>
		) T1
		WHERE 1 = 1
	 	AND	EV_GUBUN2 = '1'
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE1
		<include refid="ComPgng.pgngTailClause"/>
	</select>
	
	<select id="vendEvalStndListTotcnt" resultType="int">
		SELECT COUNT(1) FROM (
			<include refid="vendEvalStndList"/>
			<include refid="vendEvalStndListWhere"/>
		) T1
		WHERE 1 = 1
	 	AND	EV_GUBUN2 = '1'
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE1
	</select>
	
	<select id="selectVendEvalStndDetail" resultType="dataEntity">
		SELECT	 EV_CODE1
				,EV_NAME1
				,DIST_SCORE
				,EV_GUBUN1
				,F_CDVAL_INQIRE('N00002', NVL(EV_GUBUN1, 'A')) AS EV_GUBUN1_NM
				,REMARK			
				,USE_YN
				,F_CDVAL_INQIRE('N00004', NVL(USE_YN, '')) AS USE_YN_NM
				,DEPT_SG_CODE
				,F_CDVAL_INQIRE('N00001', NVL(DEPT_SG_CODE, '')) AS DEPT_SG_NAME
				,EV_GUBUN2
				,ORG_ID
		FROM	T_EV_CODE1
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		 	AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</select>
	
	<select id="selectVendEvalStndDetailList" resultType="dataEntity">
		SELECT	 EV_CODE1
				,EV_CODE2
				,EV_NAME2
				,DIST_SCORE
				,REMARK		
				,ORG_ID
		FROM	T_EV_CODE2
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
				AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE2
	</select>
	
	<update id="updateT_ev_code1" timeout="120">
		UPDATE	T_EV_CODE1 
		SET		 EV_NAME1	=	#{ev_name1, jdbcType=VARCHAR}
				,USE_YN		=	#{use_yn, jdbcType=VARCHAR}
				,EV_GUBUN1	=	#{ev_gubun1, jdbcType=VARCHAR}
				,REMARK		=	#{remark, jdbcType=VARCHAR}
				,EV_GUBUN2	=	#{ev_gubun2, jdbcType=VARCHAR}
				,DIST_SCORE =	#{dist_score, jdbcType=INTEGER}
				,DEPT_SG_CODE = #{dept_sg_code, jdbcType=VARCHAR}
				,DEPT_SG_NAME = (F_CDVAL_INQIRE('N00001', NVL(#{dept_sg_code, jdbcType=VARCHAR},'')))
		WHERE	EV_CODE1	=	#{ev_code1, jdbcType=VARCHAR}
			AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</update>
	<delete id="deleteT_ev_code1">
		DELETE FROM T_EV_CODE1
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		AND 	ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteT_ev_code2">
		DELETE FROM	T_EV_CODE2
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		AND 	ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	
	<sql id="vendDtlEvalStndList">
	SELECT *
		FROM(
		SELECT	ROWNUM AS SEQ
				,EV_CODE1
				,EV_NAME1
				,EV_CODE2
				,EV_NAME2
				,DIST_SCORE2
				,DECODE (USE_YN , NULL, 'N', 'Y') AS USE_YN
				,TOT_CNT
				,ORG_ID
				,EV_GUBUN1
				,EV_GUBUN2
		FROM(
				SELECT	A.EV_CODE1
			    ,A.EV_NAME1
			    ,B.EV_CODE2
			    ,B.EV_NAME2
			    ,A.ORG_ID
			    ,A.EV_GUBUN1
			    ,A.EV_GUBUN2
			    ,B.DIST_SCORE		AS dist_score2
			    ,(SELECT EV_CODE1 FROM T_EV_CODE3 WHERE EV_CODE1 = A.EV_CODE1 GROUP BY EV_CODE1) AS USE_YN
			    ,COUNT(*) OVER()	AS tot_cnt
				FROM	T_EV_CODE1 A, T_EV_CODE2 B
				WHERE  A.EV_CODE1	= B.EV_CODE1(+)
				AND	A.ORG_ID = B.ORG_ID
		 	)
		 )
	</sql>
	<sql id="vendDtlEvalStndListWhere">
		<where>
				<if test='ev_code1 != "" and ev_code1 != null '>
					AND		UPPER(EV_CODE1) LIKE UPPER('%' || #{ev_code1, jdbcType=VARCHAR} || '%')
				</if>
				<if test='ev_code2 != "" and ev_code2 != null '>
					AND		UPPER(EV_CODE2) LIKE UPPER('%' || #{ev_code2, jdbcType=VARCHAR} || '%')
				</if> 
				<if test='ev_name1 != "" and ev_name1 != null '>
					AND		UPPER(EV_NAME1) LIKE UPPER('%' || #{ev_name1, jdbcType=VARCHAR} || '%')
				</if>
				<if test='ev_name2 != "" and ev_name2 != null '>
					AND		UPPER(EV_NAME2) LIKE UPPER('%' || #{ev_name2, jdbcType=VARCHAR} || '%')
				</if>
				<if test='use_yn != "" and use_yn != null '>
					AND		USE_YN = #{use_yn, jdbcType=VARCHAR}
				</if>  
		</where>
	</sql>
	
	<select id="vendDtlEvalStndListInqireWithPgng" resultType="dataEntity">
		<include refid="ComPgng.pgngHeaderClause"/>
		SELECT * FROM (
			<include refid="vendDtlEvalStndList"/>
			<include refid="vendDtlEvalStndListWhere"/>
		) T1
		WHERE EV_GUBUN1 NOT IN ('A','B','E')
		AND	ORG_ID = #{orgId, jdbcType=INTEGER}
		AND EV_GUBUN2 = '1'
		ORDER BY  EV_CODE1 DESC
		<include refid="ComPgng.pgngTailClause"/>
	</select>
	<select id="vendDtlEvalStndListTotcnt" resultType="int">
		SELECT COUNT(1) FROM (
			<include refid="vendDtlEvalStndList"/>
			<include refid="vendDtlEvalStndListWhere"/>
		) T1
		WHERE EV_GUBUN1 NOT IN ('A','B','E')
		AND	ORG_ID = #{orgId, jdbcType=INTEGER}
		AND EV_GUBUN2 = '1'
		ORDER BY  EV_CODE1 DESC
	</select>
	
	<select id="selectVendDtlEvalStndDetail" resultType="dataEntity">
		SELECT  	 A.EV_CODE1			
			        ,A.EV_NAME1	
			        ,B.EV_CODE2	
			        ,B.EV_NAME2	
			        ,B.DIST_SCORE
			        ,B.REMARK	
			        ,A.ORG_ID
		FROM    T_EV_CODE1 A, T_EV_CODE2 B
        WHERE	A.EV_CODE1 = B.ev_code1
        		AND		A.ORG_ID = B.ORG_ID
				AND		B.EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
				AND		B.EV_CODE2 = #{ev_code2, jdbcType=VARCHAR}
				AND A.ORG_ID = #{orgId, jdbcType=INTEGER}
	</select>
	<select id="selectVendDtlEvalStndDetailList" resultType="dataEntity">
		SELECT	 EV_CODE3
				,EV_NAME3
				,DIST_SCORE
				,REMARK			
				,ORG_ID
		FROM	T_EV_CODE3
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		AND		EV_CODE2 = #{ev_code2, jdbcType=VARCHAR}
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE3
	</select>
	<delete id="deleteT_Ev_Code3">
		DELETE FROM T_EV_CODE3
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		AND		EV_CODE2 = #{ev_code2, jdbcType=VARCHAR}
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<insert id="insertT_Ev_Code3" >
		<selectKey keyProperty="ev_code3" resultType="String" order="BEFORE">
				<if test='ev_code3 == "" or ev_code3 == null '>
					SELECT 'ED'||LPAD(NVL(MAX(SUBSTR(EV_CODE3,3)),0)+1,4,'0') AS ev_code3
					FROM  T_EV_CODE3
					WHERE 1=1
					<if test='ev_code1 != "" and ev_code1 != null'>
						AND EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
					</if>
					<if test='ev_code2 != "" and ev_code2 != null'>
						AND EV_CODE2 = #{ev_code2, jdbcType=VARCHAR}
					</if>
				</if>
				<if test='ev_code3 != "" and ev_code3 != null '>
					SELECT #{ev_code3, jdbcType=VARCHAR} AS ev_code3
					FROM DUAL 
				</if>
		</selectKey>
		INSERT INTO T_EV_CODE3 (
					 EV_CODE1
					,EV_CODE2
					,EV_CODE3
					,EV_NAME3
					,DIST_SCORE
					,REMARK
					,ORG_ID
				) VALUES (
					 #{ev_code1, jdbcType=VARCHAR}
					,#{ev_code2, jdbcType=VARCHAR}
					,#{ev_code3, jdbcType=VARCHAR}
					,#{ev_name3, jdbcType=VARCHAR}
					,#{dist_score, jdbcType=INTEGER}
					,#{remark, jdbcType=VARCHAR}
					,#{orgId, jdbcType=INTEGER}
				)
	</insert>
	
	<sql id="vendEvalDeptStndList">
		SELECT *
		FROM(
			SELECT ROWNUM AS SEQ
							,EV_CODE1
							,EV_NAME1
							,DIST_SCORE
							,EV_GUBUN1
							,EV_GUBUN1_NM
							,REMARK
							,USE_YN
							,USE_YN_NM
							,DEPT_SG_CODE
							,DEPT_SG_NAME
							,EV_GUBUN2
							,ORG_ID
			FROM(
					SELECT	 EV_CODE1
							,EV_NAME1
							,DIST_SCORE
							,EV_GUBUN1
							,F_CDVAL_INQIRE('N00003', NVL(EV_GUBUN1, 'A')) AS EV_GUBUN1_NM
							,REMARK
							,USE_YN
							,F_CDVAL_INQIRE('N00004', NVL(USE_YN, '')) AS USE_YN_NM
							,DEPT_SG_CODE
							,DEPT_SG_NAME
							,EV_GUBUN2
							,ORG_ID
					FROM	T_EV_CODE1
				)
			)
	</sql>
	<sql id="vendEvalDeptStndListWhere">
		<where>
			<if test='ev_code1 != "" and ev_code1 != null '>
				AND		UPPER(EV_CODE1) like UPPER('%' || #{ev_code1, jdbcType=VARCHAR} || '%')
			</if>
			<if test='ev_name1 != "" and ev_name1 != null '>
				AND		UPPER(EV_NAME1) like UPPER('%' || #{ev_name1, jdbcType=VARCHAR} || '%')
			</if>
			<if test='use_yn != "" and use_yn != null '>
				AND		USE_YN = #{use_yn, jdbcType=VARCHAR}
			</if>
			<if test='dept_sg_code != "" and dept_sg_code != null '>
				AND DEPT_SG_CODE = #{dept_sg_code}
			</if>
		</where>
	</sql>
	
	<!--  
     * <pre>
     
     * 1. 개요 : 유관부서 목록조회
     * 2. 처리내용 :
     * </pre>
     -->
     
	<select id="vendEvalDeptStndListInqireWithPgng" resultType="dataEntity">
		<include refid="ComPgng.pgngHeaderClause"/>
		SELECT * FROM (
			<include refid="vendEvalDeptStndList"/>
			<include refid="vendEvalDeptStndListWhere"/>
		) T1
		WHERE 1 = 1
	 	AND	EV_GUBUN2 = '2'
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE1
		<include refid="ComPgng.pgngTailClause"/>
	</select>
	
	<select id="vendEvalDeptStndListTotcnt" resultType="int">
		SELECT COUNT(1) FROM (
			<include refid="vendEvalDeptStndList"/>
			<include refid="vendEvalDeptStndListWhere"/>
		) T1
		WHERE 1 = 1
	 	AND	EV_GUBUN2 = '2'
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE1
	</select>
	<select id="selectVendEvalDeptStndDetail" resultType="dataEntity">
		SELECT	 EV_CODE1
				,EV_NAME1
				,DIST_SCORE
				,EV_GUBUN1
				,F_CDVAL_INQIRE('N00003', NVL(EV_GUBUN1, 'A')) AS EV_GUBUN1_NM
				,REMARK			
				,USE_YN
				,F_CDVAL_INQIRE('N00004', NVL(USE_YN, '')) AS USE_YN_NM
				,DEPT_SG_CODE
				,F_CDVAL_INQIRE('N00001', NVL(DEPT_SG_CODE, '')) AS DEPT_SG_NAME
				,EV_GUBUN2
				,ORG_ID
		FROM	T_EV_CODE1
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		 	AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</select>
	
	<select id="selectVendEvalDeptStndDetailList" resultType="dataEntity">
		SELECT	 EV_CODE1
				,EV_CODE2
				,EV_NAME2
				,DIST_SCORE
				,REMARK		
				,ORG_ID
		FROM	T_EV_CODE2
		WHERE	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
				AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE2
	</select>
	<!--  
     * <pre>
     
     * 1. 개요 : 평가종합관리 목록조회
     * 2. 처리내용 :
     * </pre>
     -->
     
	<select id="vendEvalListInqireWithPgng" resultType="dataEntity">
		<include refid="ComPgng.pgngHeaderClause"/>
		SELECT * FROM (
			<include refid="vendEvalList"/>
			<include refid="vendEvalListWhere"/>
		) T1
		WHERE 1 = 1
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY DYYYY DESC, TO_NUMBER(EV_SEQ) DESC
		<include refid="ComPgng.pgngTailClause"/>
	</select>
	<select id="vendEvalListTotcnt" resultType="int">
		SELECT COUNT(1) FROM (
			<include refid="vendEvalList"/>
			<include refid="vendEvalListWhere"/>
		) T1
		WHERE 1 = 1
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY DYYYY DESC, TO_NUMBER(EV_SEQ) DESC
	</select>
	<sql id="vendEvalList">
       SELECT	 DYYYY
				,EV_SEQ
				,EV_NAME
				,EV_TYPE
				,F_CDVAL_INQIRE('N00005', NVL(EV_TYPE, 'A')) AS EV_TYPE_NM
				,EXEC_DATE_F
				,EXEC_DATE_T
				,WORK_DATE_F
				,WORK_DATE_T
				,EV_STATE
				,ORG_ID
				,F_CDVAL_INQIRE('N00006', NVL(EV_STATE, 'A')) AS EV_STATE_NM
				,REMARK
		FROM	T_EV_MASTER
	</sql>
	<sql id="vendEvalListWhere">
		<where>
			<if test='dyyyy_sch != "" and dyyyy_sch != null '>
				 AND DYYYY = #{dyyyy_sch, jdbcType=VARCHAR}
			</if>
			<if test='ev_name_sch != "" and ev_name_sch != null '>
				AND EV_NAME like '%' ||#{ev_name_sch, jdbcType=VARCHAR}|| '%'
			</if>
			<if test='ev_state_sch != "" and ev_state_sch != null '>
				 AND EV_STATE = #{ev_state_sch, jdbcType=VARCHAR}
			</if>
			<if test='ev_type_sch != "" and ev_type_sch != null '>
				AND EV_TYPE = #{ev_type_sch, jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	<select id="selectT_Ev_Code1_List" resultType="dataEntity">
		SELECT 	 EV_CODE1
				,EV_NAME1
				,NVL(DIST_SCORE, 0) DIST_SCORE
				,EV_GUBUN1
				,F_CDVAL_INQIRE('N00002', NVL(EV_GUBUN1, 'A')) AS EV_GUBUN1_NM 
				,REMARK
				,USE_YN
				,DEPT_SG_CODE
				,F_CDVAL_INQIRE('N00001', NVL(DEPT_SG_CODE, '')) AS DEPT_SG_NAME
				,EV_GUBUN2
		FROM	T_EV_CODE1
		WHERE USE_YN = 'Y'
		<if test='ev_code1 != "" and ev_code1 != null '>
			AND		ev_code1 = #{ev_code1, jdbcType=VARCHAR}
		</if>
		<if test='ev_name1 != "" and ev_name1 != null '>
			AND		ev_name1 like '%' || #{ev_name1, jdbcType=VARCHAR} || '%'
		</if>
		<if test='ev_gubun2 != "" and ev_gubun2 != null '>
			AND		ev_gubun2 = #{ev_gubun2, jdbcType=VARCHAR}
		</if>
			AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY ev_code1
	</select>
	
	<insert id="insertT_Ev_Master">
		<selectKey keyProperty="ev_seq" resultType="string" order="BEFORE">
			SELECT	NVl(MAX(TO_NUMBER(EV_SEQ)), 0) + 1 AS ev_seq
			FROM	T_EV_MASTER
			WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
			AND 	ORG_ID = #{orgId, jdbcType=INTEGER}
		</selectKey>
		INSERT INTO T_EV_MASTER
		(
			 DYYYY
			,EV_SEQ
			,EV_NAME
			,EV_TYPE
			,EXEC_DATE_F
			,EXEC_DATE_T
			,WORK_DATE_F
			,WORK_DATE_T
			,EV_STATE
			,REMARK
			,ORG_ID
		)
		VALUES
		(
			 #{dyyyy, jdbcType=VARCHAR}
			,#{ev_seq, jdbcType=VARCHAR}
			,#{ev_name, jdbcType=VARCHAR}
			,#{ev_type, jdbcType=VARCHAR}
			,#{exec_date_f, jdbcType=VARCHAR}
			,#{exec_date_t, jdbcType=VARCHAR}
			,#{work_date_f, jdbcType=VARCHAR}
			,#{work_date_t, jdbcType=VARCHAR}
			,#{ev_state, jdbcType=VARCHAR}
			,#{remark, jdbcType=VARCHAR}
			,#{orgId, jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertT_Ev_Yyyy_Code1">
		INSERT INTO T_EV_YYYY_CODE1
		(
			 DYYYY
			,EV_SEQ
			,SG_CODE
			,SG_NAME
			,DIST_SCORE
			,EV_CODE1
			,EV_NAME1
			,EV_GUBUN1
			,REMARK
			,DEPT_SG_CODE
			,DEPT_SG_NAME
			,EV_GUBUN2
			,ORG_ID
		)
		SELECT 
			#{dyyyy, jdbcType=VARCHAR}
			,#{ev_seq, jdbcType=VARCHAR}
			<if test='ev_gubun2 == "1"'>
				,#{sg_code, jdbcType=VARCHAR}
				,#{sg_name, jdbcType=VARCHAR}
				,#{dist_score, jdbcType=VARCHAR}
			</if>
			<if test='ev_gubun2 == "2"'>
				,DEPT_SG_CODE
				,DEPT_SG_NAME
				,DIST_SCORE
			</if>
			,EV_CODE1
			,EV_NAME1
			,EV_GUBUN1
			,REMARK
			,DEPT_SG_CODE
			,DEPT_SG_NAME
			,EV_GUBUN2
			,ORG_ID
		FROM	T_EV_CODE1
		WHERE	USE_YN = 'Y'
		<if test='ev_gubun2 != "" and ev_gubun2 != null '>
		  <if test='ev_gubun2 == "1"'>
			AND	EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		  </if>
			AND	EV_GUBUN2 = #{ev_gubun2, jdbcType=VARCHAR}
		</if>
			AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</insert>
	
	<insert id="insertT_Ev_Yyyy_Code2" timeout="120">
		INSERT INTO T_EV_YYYY_CODE2
		(
			 DYYYY
			,EV_SEQ
			,SG_CODE
			,EV_CODE1
			,EV_CODE2
			,EV_NAME2
			,DIST_SCORE
			,REMARK
			,ORG_ID
		)
		SELECT 
			#{dyyyy, jdbcType=VARCHAR}
			,#{ev_seq, jdbcType=VARCHAR}
			<if test='ev_gubun2 == "1"'>
				,#{sg_code, jdbcType=VARCHAR}
			</if>
			<if test='ev_gubun2 == "2"'>
				,B.DEPT_SG_CODE
			</if>
			,A.EV_CODE1
			,A.EV_CODE2
			,A.EV_NAME2
			,A.DIST_SCORE
			,A.REMARK
			,A.ORG_ID
		FROM	T_EV_CODE2 A
		<if test='ev_gubun2 == "2"'>
				, T_EV_CODE1 B
		</if>
		WHERE	1=1
		<if test='ev_gubun2 == "1"'>
			AND		A.EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		</if>
		<if test='ev_gubun2 == "2"'>
			AND 	A.ORG_ID = B.ORG_ID
			AND		A.EV_CODE1 = B.EV_CODE1
			AND		B.EV_GUBUN2 = 2
			AND		B.USE_YN = 'Y'
		</if>
		AND A.ORG_ID = #{orgId, jdbcType=INTEGER}
	</insert>
	
	<insert id="insertT_Ev_Yyyy_Code3">
		INSERT INTO T_EV_YYYY_CODE3
		(
			 DYYYY
			,EV_SEQ
			,SG_CODE
			,EV_CODE1
			,EV_CODE2
			,EV_CODE3
			,EV_NAME3
			,DIST_SCORE
			,REMARK
			,STANDARD1
			,STANDARD2
			,STANDARD3
			,STANDARD4
			,STANDARD5
			,STANDARD6
			,STANDARD7
			,STANDARD8
			,STANDARD9
			,STANDARD10
			,ORG_ID
		)
		SELECT 
			 #{dyyyy, jdbcType=VARCHAR}
			,#{ev_seq, jdbcType=VARCHAR}
			<if test='ev_gubun2 == "1"'>
				,#{sg_code, jdbcType=VARCHAR}
			</if>
			<if test='ev_gubun2 == "2"'>
				,B.DEPT_SG_CODE
			</if>
			,A.EV_CODE1
			,A.EV_CODE2
			,A.EV_CODE3
			,A.EV_NAME3
			,A.DIST_SCORE
			,A.REMARK
			,STANDARD1
			,STANDARD2
			,STANDARD3
			,STANDARD4
			,STANDARD5
			,STANDARD6
			,STANDARD7
			,STANDARD8
			,STANDARD9
			,STANDARD10
			,A.ORG_ID
		FROM	T_EV_CODE3 A
		<if test='ev_gubun2 == "2"'>
				, T_EV_CODE1 B
		</if>
		WHERE	1=1
		<if test='ev_gubun2 == "1"'>
		AND		A.EV_CODE1 = #{ev_code1, jdbcType=VARCHAR}
		</if>
		<if test='ev_gubun2 == "2"'>
			AND A.ORG_ID = B.ORG_ID
			AND		A.EV_CODE1 = B.EV_CODE1
			AND		B.EV_GUBUN2 = 2
		</if>
		AND A.ORG_ID = #{orgId, jdbcType=INTEGER}
	</insert>
	<insert id="insertT_Ev_Vendor_Temp">
		INSERT INTO T_EV_VENDOR_TEMP
		(
			DYYYY
			,EV_SEQ
			,VENDOR_CODE
			,SG_CODE
			,REMARK
			,SG_NAME
			,ORG_ID
		)
		SELECT 	DISTINCT #{dyyyy, jdbcType=VARCHAR} AS DYYYY
				,#{ev_seq, jdbcType=VARCHAR} AS EV_SEQ
				,COEN.ENTRPS_REGIST_NO AS VENDOR_CODE
				,SG.SG_CODE AS SG_CODE
				,'' AS REMARK
				,SG.SG_NAME AS SG_NAME
				,#{orgId, jdbcType=INTEGER} AS ORG_ID
		FROM TECT_COMA COMA, TECT_COEN COEN, T_CO_VENDOR_SG SG
		,(SELECT SG_CODE
                FROM   (SELECT SG_CODE,
                               SUM(DIST_SCORE) AS DIST_SCORE
                        FROM   T_EV_YYYY_CODE1
                        WHERE  DYYYY = #{dyyyy, jdbcType=VARCHAR} 
                               AND EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
                               AND EV_GUBUN2 = '1'
                               AND ORG_ID = #{orgId, jdbcType=INTEGER} 
                        GROUP  BY SG_CODE) A
                WHERE  A.DIST_SCORE != '0') A
		WHERE 1=1
<!-- 		AND A.AP_AMT >= #{min_amt} -->
		AND COMA.CNTRCT_NO = COEN.CNTRCT_NO
		AND COMA.CHANGE_ODR = COEN.CHANGE_ODR
		AND COMA.CHANGE_ODR = (SELECT MAX(CHANGE_ODR) FROM TECT_COMA WHERE COMA.CNTRCT_NO = CNTRCT_NO )
		AND COEN.ENTRPS_REGIST_NO = SG.ENTRPS_REGIST_NO
		AND COEN.REPRSNT_ENTRPS_AT ='Y'
		AND SG.MAIN_SG = 'Y'
		AND	CNTRCT_PRST_CD IN ('CT80') <!-- CT80 : 계약완료 -->
		AND SG.SG_CODE = A.SG_CODE
		AND TO_DATE(CNTRCTPD_BEGIN_DE, 'yyyy-MM-dd') >= #{work_date_f, jdbcType=INTEGER}
		AND TO_DATE(CNTRCTPD_END_DE, 'yyyy-MM-dd') &lt;= #{work_date_t, jdbcType=INTEGER}
	</insert>
	<select id="selectT_Ev_Master" resultType="dataEntity">
		SELECT	 DYYYY
				,EV_SEQ
				,EV_NAME
				,EV_TYPE
				,F_CDVAL_INQIRE('N00005', NVL(EV_TYPE, 'A')) AS EV_TYPE_NM
				,EXEC_DATE_F
				,EXEC_DATE_T
				,WORK_DATE_F
				,WORK_DATE_T
				,EV_STATE
				,F_CDVAL_INQIRE('N00006', NVL(EV_STATE, 'A')) AS EV_STATE_NM
				,REMARK
				,ORG_ID
		FROM	T_EV_MASTER
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND 	ORG_ID = #{orgId, jdbcType=INTEGER}
	</select>
	<select id="selectSgT_Ev_Yyyy_Code1"  resultType="dataEntity">
		SELECT	DISTINCT SG_CODE, SG_NAME
		FROM	T_EV_YYYY_CODE1
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		<if test='ev_gubun2 != "" and ev_gubun2 != null '>
		AND		EV_GUBUN2 = #{ev_gubun2, jdbcType=VARCHAR}
		</if>
			AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY SG_CODE
	</select>
	<select id="selectT_Ev_Yyyy_Code1List" resultType="dataEntity">
		SELECT	 DYYYY
				,EV_SEQ
				,SG_CODE
				,EV_CODE1
				,EV_NAME1
				,DIST_SCORE
				,EV_GUBUN1
				,F_CDVAL_INQIRE('N00002', NVL(EV_GUBUN1, 'A')) AS EV_GUBUN1_NM
				,REMARK
				,DEPT_SG_CODE
				,DEPT_SG_NAME
				,EV_GUBUN2
				,SG_NAME
				,ORG_ID
		FROM	T_EV_YYYY_CODE1
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		<if test='ev_gubun2 != "" and ev_gubun2 != null '>
		AND		EV_GUBUN2 = #{ev_gubun2, jdbcType=VARCHAR}
		</if>
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY EV_CODE1
	</select>
	<delete id="deleteEvMaster">
		DELETE	T_EV_MASTER 
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteEvYyyyCode1">
		DELETE	T_EV_YYYY_CODE1 
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteEvYyyyCode2">
		DELETE	T_EV_YYYY_CODE2 
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteEvYyyyCode3">
		DELETE	T_EV_YYYY_CODE3 
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteEvVendor" >
		DELETE	T_EV_VENDOR 
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		<if test='vendor_code != "" and vendor_code != null '>
			AND		VENDOR_CODE = #{vendor_code, jdbcType=VARCHAR}
		</if>
		<if test='sg_code != "" and sg_code != null '>
			AND		SG_CODE = #{sg_code, jdbcType=VARCHAR}
		</if>
			AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteEvVendorDept">
		DELETE	T_EV_VENDOR_DEPT 
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<delete id="deleteEvVendorTemp">
		DELETE T_EV_VENDOR_TEMP
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND 	EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		<if test='vendor_code != "" and vendor_code != null '>
			AND		VENDOR_CODE = #{vendor_code, jdbcType=VARCHAR}
		</if>
		<if test='sg_code != "" and sg_code != null '>
			AND		SG_CODE = #{sg_code, jdbcType=VARCHAR}
		</if>
			AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</delete>
	<select id="selectT_ev_vendor_List" resultType="dataEntity">
		   SELECT	  C.DYYYY AS DYYYY
					  ,C.EV_SEQ AS EV_SEQ
		              ,C.VENDOR_CODE AS VENDOR_CODE
		              ,C.SG_CODE AS SG_CODE
		              ,C.SG_NAME AS SG_NAME
		              ,B.PRTNR_KOREAN_NM AS VENDOR_NAME
		              ,C.TOT_SCORE AS TOT_SCORE
		              ,B.RPRSNTV_NM  AS PRES_NAME
		              ,USE_YN
		              ,A.ATCHMNFL_GROUP_NO
		FROM 	 (SELECT VENDOR_CODE
								,DYYYY
								,EV_SEQ
								,SG_CODE
								,SG_NAME
								,'Y' AS USE_YN
								,ORG_ID
								,ATCHMNFL_GROUP_NO
  		  				FROM T_EV_VENDOR) A
  		  						,(SELECT * FROM TMUR_ENPA) B
		  						,(SELECT
							              		 MM.VENDOR_CODE AS VENDOR_CODE
							              		,MM.DYYYY      AS DYYYY
							              		,MM.EV_SEQ AS EV_SEQ
												,MM.SG_CODE AS SG_CODE
												,MM.SG_NAME AS SG_NAME
												,NVL(SUM(MM.RSLT_SCORE),0) AS TOT_SCORE
												,MM.ORG_ID AS ORG_ID
						          FROM ( SELECT M.DYYYY
									                     ,M.SG_CODE
									                     ,M.SG_NAME
									                     ,M.EV_SEQ
														 ,M.VENDOR_CODE
									                     ,M.VENDOR_NAME
									                     ,M.PRES_NAME
									                     ,M.EV_CODE1
									                     ,M.EV_NAME1
									                     ,M.DIST_SCORE
									                     ,M.EV_GUBUN1
									                     ,M.ORG_ID
									                     ,SUM(E.SCORE) AS EVAL_SCORE
									                     ,ROUND (M.DIST_SCORE /100 *SUM(E.SCORE), 2) AS RSLT_SCORE
								                 FROM ( SELECT A.DYYYY
											                            ,A.EV_SEQ
											                            ,A.VENDOR_CODE
											                            ,A.SG_CODE
											                            ,A.SG_NAME
											                            ,B.PRTNR_KOREAN_NM AS VENDOR_NAME
											                            ,B.RPRSNTV_NM AS PRES_NAME
											                            ,C.EV_CODE1
											                            ,C.EV_NAME1
											                            ,C.DIST_SCORE
											                            ,C.EV_GUBUN1
											                            ,D.EV_CODE2
											                            ,D.EV_NAME2
											                            ,C.ORG_ID
								                         FROM T_EV_VENDOR_TEMP A
								                         			,(SELECT * FROM TMUR_ENPA) B
										                            ,T_EV_YYYY_CODE1 C
										                            ,T_EV_YYYY_CODE2 D
								                         WHERE   A.VENDOR_CODE = B.ENTRPS_REGIST_NO
								                         		 AND A.DYYYY = C.DYYYY
										                         AND A.EV_SEQ = C.EV_SEQ
										                         AND A.SG_CODE = C.SG_CODE
										                         AND C.DYYYY = D.DYYYY
										                         AND C.EV_SEQ = D.EV_SEQ
										                         AND C.SG_CODE = D.SG_CODE
										                         AND C.EV_CODE1 = D.EV_CODE1
										                         AND C.ORG_ID = D.ORG_ID
										                         AND C.EV_GUBUN2 = '1'
										                         AND A.DYYYY = #{dyyyy, jdbcType=VARCHAR}
																 AND A.EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
																 AND A.ORG_ID = #{orgId, jdbcType=INTEGER}
										                         ) M
						                     ,T_EV_VENDOR_CODE2 E
						                WHERE M.DYYYY = E.DYYYY(+)
							                  AND M.EV_SEQ = E.EV_SEQ(+)
							                  AND M.ORG_ID = E.ORG_ID(+)
							                  AND M.VENDOR_CODE = E.VENDOR_CODE(+)
							                  AND M.SG_CODE = E.SG_CODE(+)
							                  AND M.EV_CODE1 = E.EV_CODE1(+)
							                  AND M.EV_CODE2 = E.EV_CODE2(+)
							                  AND M.ORG_ID = E.ORG_ID(+)
							                  AND M.DYYYY = #{dyyyy, jdbcType=VARCHAR}
									   		  AND M.EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
									   		  AND M.ORG_ID = #{orgId, jdbcType=INTEGER}
						                GROUP BY M.DYYYY
								                       ,M.EV_SEQ
								                       ,M.VENDOR_CODE
								                       ,M.SG_CODE
								                       ,M.SG_NAME
								                       ,M.VENDOR_NAME
								                       ,M.PRES_NAME
								                       ,M.EV_CODE1
								                       ,M.EV_NAME1
								                       ,M.DIST_SCORE
								                       ,M.EV_GUBUN1
								                       ,M.ORG_ID
						               )  MM
						        GROUP BY MM.DYYYY
								        		,MM.EV_SEQ
								        		,MM.SG_CODE
								        		,MM.SG_NAME
					                            ,MM.VENDOR_CODE
					                            ,MM.VENDOR_NAME
								                ,MM.PRES_NAME
								                ,MM.ORG_ID
						       ORDER BY TOT_SCORE DESC, VENDOR_NAME
			               ) C

           WHERE C.VENDOR_CODE = B.ENTRPS_REGIST_NO
           AND C.DYYYY = A.DYYYY (+)
           AND C.EV_SEQ = A.EV_SEQ (+)
           AND C.ORG_ID = A.ORG_ID(+)
           AND C.VENDOR_CODE = A.VENDOR_CODE(+)
           AND C.SG_CODE = A.SG_CODE(+)
           AND C.DYYYY = #{dyyyy, jdbcType=VARCHAR}
		   AND C.EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		   AND C.ORG_ID = #{orgId, jdbcType=INTEGER}
		   ORDER BY USE_YN,  SG_NAME
	</select>
	<insert id="insertEvVendorDept">
		INSERT INTO T_EV_VENDOR_DEPT
		(
			 DYYYY
			,EV_SEQ
			,VENDOR_CODE
			,SG_CODE
			,DEPT_CODE
			,SG_NAME
			,DEPT_NAME
			,ORG_ID
		)
		SELECT 	DISTINCT #{dyyyy, jdbcType=VARCHAR} AS DYYYY
				,#{ev_seq, jdbcType=VARCHAR} AS EV_SEQ  
				,#{vendor_code, jdbcType=VARCHAR} AS VENDOR_CODE
				,#{sg_code, jdbcType=VARCHAR} AS SG_CODE
				, B.DEPT_CODE
				,#{sg_name, jdbcType=VARCHAR} AS SG_NAME
				, B.DEPT_NAME
				,#{orgId, jdbcType=INTEGER} AS ORG_ID
		FROM(          
			SELECT COEN.ENTRPS_REGIST_NO AS VENDOR_ID
					,SG.SG_CODE AS SG_CODE
			FROM TECT_COMA COMA, TECT_COEN COEN, T_CO_VENDOR_SG SG
			WHERE 1=1
			AND COMA.CNTRCT_NO = COEN.CNTRCT_NO
			AND COMA.CHANGE_ODR = COEN.CHANGE_ODR
			AND COMA.CHANGE_ODR = (SELECT MAX(CHANGE_ODR) FROM TECT_COMA WHERE COMA.CNTRCT_NO = CNTRCT_NO )
			AND COEN.ENTRPS_REGIST_NO = SG.ENTRPS_REGIST_NO
			AND COEN.REPRSNT_ENTRPS_AT ='Y'
			AND SG.MAIN_SG = 'Y'
			AND	CNTRCT_PRST_CD IN ('CT80') <!-- CT80 : 계약완료 -->
<!-- 			AND SG.SG_CODE = A.SG_CODE -->
			AND TO_DATE(CNTRCTPD_BEGIN_DE, 'yyyy-MM-dd') >= #{work_date_f, jdbcType=INTEGER}
			AND TO_DATE(CNTRCTPD_END_DE, 'yyyy-MM-dd') &lt;= #{work_date_t, jdbcType=INTEGER}
		) A,
		(        
			SELECT COEN.ENTRPS_REGIST_NO AS VENDOR_ID
					,SG.SG_CODE AS SG_CODE
					,CLIENT_DEPT_NM AS DEPT_NAME
					,REQEST_DEPT_NO AS DEPT_CODE
			FROM TECT_COMA COMA, TECT_COEN COEN, T_CO_VENDOR_SG SG
			WHERE 1=1
			AND COMA.CNTRCT_NO = COEN.CNTRCT_NO
			AND COMA.CHANGE_ODR = COEN.CHANGE_ODR
			AND COMA.CHANGE_ODR = (SELECT MAX(CHANGE_ODR) FROM TECT_COMA WHERE COMA.CNTRCT_NO = CNTRCT_NO )
			AND COEN.ENTRPS_REGIST_NO = SG.ENTRPS_REGIST_NO
			AND COEN.REPRSNT_ENTRPS_AT ='Y'
			AND SG.MAIN_SG = 'Y'
			AND	CNTRCT_PRST_CD IN ('CT80') <!-- CT80 : 계약완료 -->
<!-- 			AND SG.SG_CODE = A.SG_CODE -->
			AND TO_DATE(CNTRCTPD_BEGIN_DE, 'yyyy-MM-dd') >= #{work_date_f, jdbcType=INTEGER}
			AND TO_DATE(CNTRCTPD_END_DE, 'yyyy-MM-dd') &lt;= #{work_date_t, jdbcType=INTEGER}           
			AND COEN.ENTRPS_REGIST_NO =  #{vendor_code, jdbcType=VARCHAR}
		)B
		WHERE	A.SG_CODE = B.SG_CODE
			AND A.VENDOR_ID = B.VENDOR_ID
	</insert>
	<insert id="insertEvVendorCode2" >
		INSERT INTO T_EV_VENDOR_CODE2 (
					DYYYY
				   ,EV_SEQ
				   ,VENDOR_CODE
				   ,SG_CODE
				   ,EV_CODE1
				   ,EV_CODE2
				   ,SCORE
				   ,VALUE
				   ,EV_NAME2
				   ,EV_CODE3
				   ,REMARK
				   ,CREATE_DATE
				   ,CREATE_USER
				   ,UPDATE_DATE
				   ,UPDATE_USER
				   ,ORG_ID
		) VALUES (
				    #{dyyyy}
				   ,#{ev_seq}
				   ,#{vendor_code}
				   ,#{sg_code}
				   ,#{ev_code1}
				   ,#{ev_code2}
				   ,#{score2}
				   ,#{value2}
				   ,#{ev_name2}
				   ,#{ev_code3}
				   ,#{remark2}
				   ,SYSDATE
				   ,#{create_user}
				   ,SYSDATE
				   ,#{update_user}
				   ,#{orgId}
				)
	</insert>
	<!-- 평가 업체 저장 -->
	<insert id="insertEvVendor">
	
		INSERT INTO T_EV_VENDOR
		(
			 DYYYY
			,EV_SEQ
			,VENDOR_CODE
			,SG_CODE
			,SG_NAME
			,ORG_ID
		) VALUES
		(
			 #{dyyyy}
			,#{ev_seq}
			,#{vendor_code}
			,#{sg_code}
			,#{sg_name}
			,#{orgId}
		)
	</insert>
	<!-- 평가상태 업데이트 -->
	<update id="evalStateUpdate">
		UPDATE	T_EV_MASTER
		SET		EV_STATE = #{ev_state} 
		WHERE	DYYYY = #{dyyyy}
			AND	EV_SEQ = #{ev_seq}
			AND  ORG_ID = #{orgId}
	</update>
	<!-- 하반기 업체평가 추가 리스트 -->
	<select id="getT_ev_vendor_add_List">
		  INSERT INTO T_EV_VENDOR_TEMP (  DYYYY
																,EV_SEQ
																,VENDOR_CODE
																,SG_CODE
																,REMARK
																,SG_NAME
																,ORG_ID
															)
															
		(
				  	SELECT 	DISTINCT #{dyyyy, jdbcType=VARCHAR} AS DYYYY
							,#{ev_seq, jdbcType=VARCHAR} AS EV_SEQ
							,COEN.ENTRPS_REGIST_NO AS VENDOR_CODE
							,SG.SG_CODE AS SG_CODE
							,'' AS REMARK
							,SG.SG_NAME AS SG_NAME
							,#{orgId, jdbcType=INTEGER} AS ORG_ID
					FROM TECT_COMA COMA, TECT_COEN COEN, T_CO_VENDOR_SG SG
								  
 				    WHERE	1=1
			<!-- 		AND A.AP_AMT >= #{min_amt} -->
					AND COMA.CNTRCT_NO = COEN.CNTRCT_NO
					AND COMA.CHANGE_ODR = COEN.CHANGE_ODR
					AND COMA.CHANGE_ODR = (SELECT MAX(CHANGE_ODR) FROM TECT_COMA WHERE COMA.CNTRCT_NO = CNTRCT_NO )
					AND COEN.ENTRPS_REGIST_NO = SG.ENTRPS_REGIST_NO
					AND COEN.REPRSNT_ENTRPS_AT ='Y'
					AND SG.MAIN_SG = 'Y'
					AND	CNTRCT_PRST_CD IN ('CT80') <!-- CT80 : 계약완료 -->
					AND TO_DATE(CNTRCTPD_BEGIN_DE, 'yyyy-MM-dd') >= #{work_date_f, jdbcType=INTEGER}
					AND TO_DATE(CNTRCTPD_END_DE, 'yyyy-MM-dd') &lt;= #{work_date_t, jdbcType=INTEGER}
					
					MINUS
					
					SELECT	 TO_CHAR(DYYYY) AS DYYYY
						        ,TO_CHAR(EV_SEQ) AS EV_SEQ <!-- 데이터 유형 수정 -->
						        ,VENDOR_CODE
						        ,SG_CODE
						        ,REMARK
						        ,SG_NAME
						        ,ORG_ID
					FROM	T_EV_VENDOR_TEMP
					WHERE	DYYYY = #{dyyyy}
						AND	EV_SEQ = #{ev_seq}
						AND 	ORG_ID = #{orgId}
					
					)
	</select>	
	<select id="vendEvalDeptListInqireWithPgng" resultType="dataEntity">
		<include refid="ComPgng.pgngHeaderClause"/>
		SELECT * FROM (
			<include refid="vendEvalDeptList"/>
			<include refid="vendEvalDeptListWhere"/>
		) T1
		WHERE 1 = 1
	 	AND EV_STATE != 'A'
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY DYYYY DESC, TO_NUMBER(EV_SEQ) DESC
		<include refid="ComPgng.pgngTailClause"/>
	</select>
	<select id="vendEvalDeptListTotcnt"  resultType="int">
		SELECT COUNT(1) FROM (
			<include refid="vendEvalDeptList"/>
			<include refid="vendEvalDeptListWhere"/>
		) T1
		WHERE 1 = 1
	 	AND EV_STATE != 'A'
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</select>
	
	<sql id="vendEvalDeptList">
			 SELECT ROWNUM AS SEQ
		       		 ,DYYYY
			         ,EV_SEQ
			         ,EV_NAME
			         ,EV_TYPE
			         ,F_CDVAL_INQIRE('N00005', NVL(EV_TYPE, 'A')) AS EV_TYPE_NM
			         ,EXEC_DATE_F
			         ,EXEC_DATE_T
			         ,WORK_DATE_F
			         ,WORK_DATE_T
			         ,EV_STATE
			         ,F_CDVAL_INQIRE('N00006', NVL(EV_STATE, 'A')) AS EV_STATE_NM
			         ,REMARK		
			         ,ORG_ID	
		     FROM T_EV_MASTER
	</sql>
	<sql id="vendEvalDeptListWhere">
		<where>
				 <if test='dyyyy_sch != "" and dyyyy_sch != null '>
			    	 AND DYYYY = #{dyyyy_sch}
			     </if>
			     <if test='ev_name_sch != "" and ev_name_sch != null '>  
			     AND EV_NAME like '%' ||#{ev_name_sch}|| '%'
		       </if>
		        <if test='ev_state_sch != "" and ev_state_sch != null '>  
			     AND EV_STATE = #{ev_state_sch}
				</if>  
				<if test='use_yn != "" and use_yn != null '>
					AND		A.USE_YN = #{use_yn, jdbcType=VARCHAR}
				</if>  
		</where>
	</sql>
	<select id="getEvMasterEvState"  resultType="dataEntity">
	
		SELECT EV_STATE 
		FROM T_EV_MASTER
		WHERE DYYYY = #{dyyyy}
			AND	EV_SEQ = #{ev_seq}
			AND ORG_ID = #{orgId}
	
	</select>
	<select id="getT_ev_vendor_deptList"  resultType="dataEntity">
		SELECT A.DYYYY AS DYYYY
              ,A.EV_SEQ AS EV_SEQ
              ,A.VENDOR_CODE AS VENDOR_CODE
              ,A.SG_CODE AS SG_CODE
              ,A.DEPT_CODE AS DEPT_CODE
              ,A.SG_NAME AS SG_NAME
              ,A.DEPT_NAME AS DEPT_NAME
              ,B.PRTNR_KOREAN_NM AS VENDOR_NAME
              ,B.RPRSNTV_NM  AS PRES_NAME
              ,ROUND(C.TOT_SCORE,2)  AS TOT_SCORE
              ,A.ATCHMNFL_GROUP_NO AS ATCHMNFL_GROUP_NO
          FROM T_EV_VENDOR_DEPT A
              ,(SELECT * FROM TMUR_ENPA) B
              ,(SELECT DYYYY
							, EV_SEQ
							, VENDOR_CODE
							, SG_CODE
							, DEPT_CODE
							, ORG_ID
							, AVG(TOT_SCORE) AS TOT_SCORE
				FROM (	SELECT DYYYY, EV_SEQ, VENDOR_CODE, SG_CODE, DEPT_CODE, SEQ, ORG_ID, SUM(SCORE) TOT_SCORE
               				FROM T_EV_VENDOR_DEPT_CODE2 C
               				WHERE DYYYY = #{dyyyy}
				               AND EV_SEQ = #{ev_seq}
				               AND ORG_ID = #{orgId}
               				GROUP BY DYYYY, EV_SEQ, VENDOR_CODE, SG_CODE, DEPT_CODE, SEQ, ORG_ID
               				
               				)
				GROUP BY DYYYY, EV_SEQ, VENDOR_CODE, SG_CODE, DEPT_CODE, ORG_ID
              ) C
         WHERE A.VENDOR_CODE = B.ENTRPS_REGIST_NO
           AND A.DYYYY= C.DYYYY(+)
           AND A.EV_SEQ= C.EV_SEQ(+)
           AND A.ORG_ID = C.ORG_ID(+)
           AND A.VENDOR_CODE= C.VENDOR_CODE(+)
           AND A.SG_CODE= C.SG_CODE(+)
           AND A.DEPT_CODE= C.DEPT_CODE(+)
           AND A.DYYYY = #{dyyyy}
           AND A.EV_SEQ = #{ev_seq}
           AND A.ORG_ID = #{orgId}
           <if test='vendor_code != "" and vendor_code != null '>
				AND	A.VENDOR_CODE = #{vendor_code}
			</if>
        ORDER BY VENDOR_NAME, SG_NAME, DEPT_NAME
         
	</select>
	<select id ="getT_ev_vendor"  resultType="dataEntity">
		SELECT distinct A.DYYYY AS DYYYY
              ,A.EV_SEQ AS EV_SEQ
              ,A.VENDOR_CODE AS VENDOR_CODE
              ,A.SG_CODE AS SG_CODE
              ,A.SG_NAME AS SG_NAME
              ,B.PRTNR_KOREAN_NM AS VENDOR_NAME
              ,B.RPRSNTV_NM AS PRES_NAME
              ,A.ORG_ID
              ,A.ATCHMNFL_GROUP_NO
          FROM T_EV_VENDOR A
              	    ,(SELECT * FROM TMUR_ENPA) B
          WHERE A.VENDOR_CODE = B.ENTRPS_REGIST_NO
           AND A.DYYYY = #{dyyyy}
           AND A.EV_SEQ = #{ev_seq}
           AND A.VENDOR_CODE = #{vendor_code}
           AND A.SG_CODE = #{sg_code}
           AND A.ORG_ID = #{orgId}
	</select>
	<select id="getT_ev_vendor_codeList"   resultType="dataEntity">
	
	SELECT 	   A.DYYYY AS DYYYY
	              ,A.EV_SEQ AS EV_SEQ
	              ,A.SG_CODE AS SG_CODE
	              ,A.EV_CODE1 AS EV_CODE1
	              ,A.EV_NAME1 AS EV_NAME1
	              ,A.DIST_SCORE AS DIST_SCORE1
	              ,A.EV_GUBUN1 AS EV_GUBUN1
	              ,A.REMARK AS REMARK1
	              ,A.DEPT_SG_CODE AS DEPT_SG_CODE
	              ,A.DEPT_SG_NAME AS DEPT_SG_NAME
	              ,A.EV_GUBUN2 AS EV_GUBUN2
	              ,A.SG_NAME AS SG_NAME
	              ,B.EV_CODE2 AS EV_CODE2
	              ,B.EV_NAME2 AS EV_NAME2
	              ,B.DIST_SCORE AS DIST_SCORE2
	              ,REPLACE(B.REMARK, CHR(13) || CHR(10), '&lt;BR/>') AS REMARK2
	              ,ROUND (C.SCORE2 , 2)  AS SCORE2
	              ,C.VALUE2 AS VALUE2
	              ,C.EV_CODE3 AS EV_CODE3
          FROM T_EV_YYYY_CODE1 A
	              ,T_EV_YYYY_CODE2 B
	              ,(SELECT A.DYYYY AS DYYYY
		                      ,A.EV_SEQ AS  EV_SEQ
		                      ,A.VENDOR_CODE AS VENDOR_CODE
		                      ,A.SG_CODE AS SG_CODE
		                      ,A.EV_CODE1 AS EV_CODE1
		                      ,A.EV_CODE2 AS EV_CODE2
		                      ,A.SCORE AS SCORE2
		                      ,A.VALUE AS VALUE2
		                      ,A.EV_NAME2 AS EV_NAME2
		                      ,A.EV_CODE3 AS EV_CODE3
		                      ,A.ORG_ID AS ORG_ID
		                      ,REPLACE(A.REMARK, CHR(13) || CHR(10), '&lt;BR/>') AS REMARK2
                  FROM T_EV_VENDOR_CODE2 A
                 WHERE A.DYYYY = #{dyyyy}
                   AND A.EV_SEQ = #{ev_seq}
                   AND A.ORG_ID = #{orgId}
                   AND A.SG_CODE =  #{sg_code}
                   AND A.VENDOR_CODE = #{vendor_code}

               ) C
         WHERE A.DYYYY = B.DYYYY
           AND A.EV_SEQ = B.EV_SEQ
           AND A.SG_CODE = B.SG_CODE
           AND A.EV_CODE1 = B.EV_CODE1
           AND A.ORG_ID  = B.ORG_ID

           AND B.DYYYY = C.DYYYY(+)
           AND B.EV_SEQ = C.EV_SEQ(+)
           AND B.ORG_ID = C.ORG_ID(+)
           AND B.SG_CODE = C.SG_CODE(+)
           AND B.EV_CODE1 = C.EV_CODE1(+)
           AND B.EV_CODE2 = C.EV_CODE2(+)

           AND A.DYYYY = #{dyyyy}
           AND A.EV_SEQ = #{ev_seq}
           AND A.ORG_ID = #{orgId}
           AND A.SG_CODE =  #{sg_code}
           AND A.EV_GUBUN2 = #{ev_gubun2}
           <if test='ev_gubun1 != "" and ev_gubun1 != null '>
           	 AND A.EV_GUBUN1 = #{ev_gubun1}
           </if>
           <if test='ev_gubun1 == "" and ev_gubun1 == null '>
           AND A.EV_GUBUN1 IN ('A', 'C', 'D', 'E','B')
           </if>
        ORDER BY TO_NUMBER(SUBSTR(A.EV_CODE1,3,6))ASC, TO_NUMBER(SUBSTR(B.EV_CODE2,3,6))ASC
	</select>
		<select id="getEv_code_length"  resultType="int">
	
		SELECT COUNT(*) FROM T_EV_YYYY_CODE1
		WHERE	DYYYY = #{dyyyy}
		AND		EV_SEQ = #{ev_seq}
		AND		SG_CODE = #{sg_code}
		AND		EV_GUBUN2 = '1'
	
	</select>
	<select id="getEvYyyyCode3List" resultType="dataEntity">
		SELECT	A.DYYYY
				,A.EV_SEQ
				,A.SG_CODE
				,A.EV_CODE1
				,A.EV_CODE2
				,A.EV_CODE3
				,A.EV_NAME3
				,A.DIST_SCORE
				,A.REMARK
				,A.STANDARD1
				,A.STANDARD2
				,A.STANDARD3
				,A.STANDARD4
				,A.STANDARD5
				,A.STANDARD6
				,A.STANDARD7
				,A.STANDARD8
				,A.STANDARD9
				,A.STANDARD10
				,A.ORG_ID
		FROM	T_EV_YYYY_CODE3 A
					, T_EV_YYYY_CODE1 B
		WHERE 	A.DYYYY = B.DYYYY
			AND 	A.EV_SEQ = B.EV_SEQ
			AND 	A.SG_CODE = B.SG_CODE
			AND 	A.EV_CODE1 = B.EV_CODE1
			AND	A.DYYYY = #{dyyyy}
			AND	A.EV_SEQ = #{ev_seq}
			AND  A.ORG_ID = B.ORG_ID
		<if test='ev_gubun1 != "" and ev_gubun1 != null '>
			AND		B.EV_GUBUN1 = #{ev_gubun1}
		</if>
		<if test='ev_code1 != "" and ev_code1 != null '>
			AND		B.EV_CODE1 = #{ev_code1}
		</if>
			AND A.ORG_ID = #{orgId}
		ORDER BY A.EV_CODE1, A.EV_CODE2, A.EV_CODE3
	</select>
	<!-- 평가업체 평가항목 삭제 -->
	<delete id="deleteEvVendorCode2">
		DELETE FROM T_EV_VENDOR_CODE2
		WHERE DYYYY = #{dyyyy}
			AND EV_SEQ = #{ev_seq}
			AND ORG_ID = #{orgId}
			<if test='vendor_code != "" and vendor_code != null '>
				AND		VENDOR_CODE = #{vendor_code}
			</if>
			<if test='sg_code != "" and sg_code != null '>
				AND		SG_CODE = #{sg_code}
			</if>
			<if test='ev_code1 != "" and ev_code1 != null '>
				AND EV_CODE1 = #{ev_code1}
			</if>
			<if test='ev_code2 != "" and ev_code2 != null '>
				AND EV_CODE2 = #{ev_code2}
			</if>
	</delete>
	<update id="uploadT_Ev_Vendor" timeout="120">
		UPDATE	T_EV_VENDOR 
		SET		 ATCHMNFL_GROUP_NO	=	#{atchFileGroupNo, jdbcType=VARCHAR}
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		VENDOR_CODE = #{vendor_code, jdbcType=VARCHAR}
		AND		SG_CODE = #{sg_code, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</update>
	<select id="getT_ev_vendor_dept" resultType="dataEntity">
		SELECT A.DYYYY AS DYYYY
	              ,A.EV_SEQ AS EV_SEQ
	              ,A.VENDOR_CODE AS VENDOR_CODE
	              ,A.SG_CODE AS SG_CODE
	              ,A.DEPT_CODE AS DEPT_CODE
	              ,A.SG_NAME AS SG_NAME
	              ,A.DEPT_NAME AS DEPT_NAME
	              ,B.PRTNR_KOREAN_NM AS VENDOR_NAME
	              ,B.RPRSNTV_NM AS PRES_NAME
	              ,A.ORG_ID AS ORG_ID
	              ,A.ATCHMNFL_GROUP_NO AS ATCHMNFL_GROUP_NO
          FROM T_EV_VENDOR_DEPT A
          			,(SELECT * FROM TMUR_ENPA) B
         WHERE A.VENDOR_CODE = B.ENTRPS_REGIST_NO 
           AND A.DYYYY = #{dyyyy}
           AND A.EV_SEQ = #{ev_seq} 
            AND A.ORG_ID = #{orgId}
           AND A.VENDOR_CODE = #{vendor_code}
           AND A.SG_CODE = #{sg_code}
           AND A.DEPT_CODE = #{dept_code}	
	</select>
	<select id="getT_ev_vendor_dept_codeList" resultType="dataEntity">
		SELECT A.DYYYY AS DYYYY
	              ,A.EV_SEQ AS EV_SEQ
	              ,A.SG_CODE AS SG_CODE
	              ,A.EV_CODE1 AS EV_CODE1
	              ,A.EV_NAME1 AS EV_NAME1
	              ,A.DIST_SCORE AS DIST_SCORE1
	              ,A.EV_GUBUN1 AS EV_GUBUN1
	              ,A.REMARK AS REMARK1
	              ,A.ORG_ID AS ORG_ID
	              ,A.DEPT_SG_CODE AS DEPT_SG_CODE
	              ,A.DEPT_SG_NAME AS DEPT_SG_NAME
	              ,A.EV_GUBUN2 AS EV_GUBUN2
	              ,A.SG_NAME AS SG_NAME
	              ,B.EV_CODE2 AS EV_CODE2
	              ,B.EV_NAME2 AS EV_NAME2
	              ,B.DIST_SCORE AS DIST_SCORE2
	              ,REPLACE(B.REMARK, CHR(13) || CHR(10), '&lt;BR/>') AS REMARK2
	              ,C.SCORE2 AS SCORE2
	              ,C.VALUE2 AS VALUE2
	              ,C.EV_CODE3 AS EV_CODE3
	              ,C.SEQ AS SEQ
          FROM T_EV_YYYY_CODE1 A
	              ,T_EV_YYYY_CODE2 B
	              ,(SELECT A.DYYYY AS DYYYY
	                      ,A.EV_SEQ AS  EV_SEQ
	                      ,A.VENDOR_CODE AS VENDOR_CODE
	                      ,A.SG_CODE AS SG_CODE
	                      ,A.DEPT_CODE AS DEPT_CODE
	                      ,A.EV_CODE1 AS EV_CODE1
	                      ,A.EV_CODE2 AS EV_CODE2
	                      ,A.SCORE AS SCORE2
	                      ,A.VALUE AS VALUE2
	                      ,A.EV_NAME2 AS EV_NAME2
	                      ,A.EV_CODE3 AS EV_CODE3
	                      ,A.SEQ AS SEQ
	                      ,A.ORG_ID AS ORG_ID
	                      ,REPLACE(A.REMARK, CHR(13) || CHR(10), '&lt;BR/>') AS REMARK2
	                  FROM T_EV_VENDOR_DEPT_CODE2 A
	                 WHERE A.DYYYY = #{dyyyy}
	                   AND A.EV_SEQ = #{ev_seq}
	                   AND A.SG_CODE =  #{sg_code}
	                   AND A.VENDOR_CODE = #{vendor_code}
	                   AND A.ORG_ID = #{orgId}
	                   <if test='seq != "" and seq != null '>
		                   AND A.SEQ	= #{seq}
	                   </if>
	                   <if test='dept_code != "" and dept_code != null '>
		                   AND A.DEPT_CODE   = #{dept_code}
	                   </if>
               ) C
         WHERE A.DYYYY = B.DYYYY
           AND A.EV_SEQ = B.EV_SEQ
           AND A.SG_CODE = B.SG_CODE
           AND A.EV_CODE1 = B.EV_CODE1
           AND A.ORG_ID = B.ORG_ID

           AND B.DYYYY = C.DYYYY(+)
           AND B.EV_SEQ = C.EV_SEQ(+)
           AND B.ORG_ID = C.ORG_ID(+)
           AND B.SG_CODE = C.SG_CODE(+)
           AND B.EV_CODE1 = C.EV_CODE1(+)
           AND B.EV_CODE2 = C.EV_CODE2(+)

           AND A.DYYYY = #{dyyyy}
           AND A.EV_SEQ = #{ev_seq}
           AND A.SG_CODE =  #{sg_code}
           AND A.ORG_ID = #{orgId}
           AND A.EV_GUBUN2 = #{ev_gubun2}

        ORDER BY DYYYY, EV_SEQ, SG_CODE,EV_GUBUN1, EV_CODE1,EV_CODE2
	</select>
	<delete id="evalDeptDeleteAll">
		DELETE FROM T_EV_VENDOR_DEPT_CODE2
		 WHERE DYYYY = #{dyyyy}
		   AND EV_SEQ = #{ev_seq}
		   AND VENDOR_CODE = #{vendor_code}
		   AND SG_CODE = #{sg_code}
		   AND DEPT_CODE = #{dept_code}
		   AND SEQ = #{seq}
		   AND ORG_ID = #{orgId}
	</delete>
	
	<select id="getEv_gubun1A"  resultType="dataEntity">
		SELECT   EV_CODE1 AS EV_CODE1
				,EV_NAME1 AS EV_NAME1
		FROM T_EV_YYYY_CODE1
		WHERE EV_GUBUN1 ='A'
		AND DYYYY = #{dyyyy}
		AND EV_SEQ = #{ev_seq}
		AND SG_CODE = #{sg_code}
		AND ORG_ID = #{orgId}
	</select>
	<insert id="evalDeptInsert" >
		INSERT INTO T_EV_VENDOR_DEPT_CODE2 (
					DYYYY
				   ,EV_SEQ
				   ,VENDOR_CODE
				   ,SG_CODE
				   ,DEPT_CODE
				   ,EV_CODE1
				   ,EV_CODE2
				   ,SCORE
				   ,VALUE
				   ,EV_NAME2
				   ,EV_CODE3
				   ,REMARK
				   ,CREATE_DATE
				   ,CREATE_USER
				   ,UPDATE_DATE
				   ,UPDATE_USER
				   ,SEQ
				   ,ORG_ID
		) VALUES (
				    #{dyyyy}
				   ,#{ev_seq}
				   ,#{vendor_code}
				   ,#{sg_code}
				   ,#{dept_code}
				   ,#{ev_code1}
				   ,#{ev_code2}
				   ,#{score2}
				   ,#{value2}
				   ,#{ev_name2}
				   ,#{ev_code3}
				   ,#{remark2}
				   ,SYSDATE
				   ,#{create_user}
				   ,SYSDATE
				   ,#{update_user}
				   ,#{seq}
				   ,#{orgId}
				)
	</insert>
	<!-- 업체중 소싱그룹이 같고 유관부서가 여러곳인 경우 현업평가 총점 구하기 -->
	<select id="getT_ev_vendor_dept_code2Sum" resultType="Double">
			
	       	SELECT AVG(TOT_SCORE) AS SCORE
			FROM (
			SELECT DEPT_CODE,AVG(TOT_SCORE) AS TOT_SCORE
			  FROM (
			        SELECT DEPT_CODE
			              ,SEQ
			              ,SUM(SCORE) TOT_SCORE
			          FROM T_EV_VENDOR_DEPT_CODE2 C
			         WHERE DYYYY = #{dyyyy}
			           AND EV_SEQ = #{ev_seq}
			           AND SG_CODE = #{sg_code}
			           AND VENDOR_CODE = #{vendor_code}
			           AND ORG_ID = #{orgId}
			        GROUP BY DEPT_CODE,SEQ
			        )
			GROUP BY DEPT_CODE
			)
	</select>
	<delete id="deleteT_ev_vendor_evalCode2">
		DELETE FROM T_EV_VENDOR_CODE2
		WHERE	DYYYY = #{dyyyy} 
		AND		EV_SEQ = #{ev_seq}
		AND		VENDOR_CODE = #{vendor_code}
		AND		SG_CODE = #{sg_code}
		<if test='ev_code1 != "" and ev_code1 != null '>
		AND		EV_CODE1 = #{ev_code1}
		</if>
	</delete>
	<insert id="insertT_ev_vendor_evalCode2">
		INSERT INTO T_EV_VENDOR_CODE2 (
				 DYYYY
				,EV_SEQ
				,VENDOR_CODE
				,SG_CODE
				,EV_CODE1
				,EV_CODE2
				,SCORE
				,VALUE
				,EV_NAME2
				,CREATE_DATE
				,CREATE_USER
				,UPDATE_DATE
				,UPDATE_USER		
				,ORG_ID
			) VALUES (
				 #{dyyyy}
				,#{ev_seq}
				,#{vendor_code}
				,#{sg_code}
				,#{ev_code1}
				,#{ev_code2}
				,#{score}
				,#{value}
				,#{ev_name2}
				,SYSDATE
				,#{create_user}
				,SYSDATE
				,#{update_user}
				,#{orgId}
			)
	</insert>
	<update id="uploadT_Ev_Vendor_Dept" timeout="120">
		UPDATE	T_EV_VENDOR_DEPT 
		SET		 ATCHMNFL_GROUP_NO	=	#{atchFileGroupNo, jdbcType=VARCHAR}
		WHERE	DYYYY = #{dyyyy, jdbcType=VARCHAR}
		AND		EV_SEQ = #{ev_seq, jdbcType=VARCHAR}
		AND		VENDOR_CODE = #{vendor_code, jdbcType=VARCHAR}
		AND		SG_CODE = #{sg_code, jdbcType=VARCHAR}
		AND		DEPT_CODE = #{dept_code, jdbcType=VARCHAR}
		AND		ORG_ID = #{orgId, jdbcType=INTEGER}
	</update>
		<!-- 평가 목록 조회 -->
	<select id="evalListInqireWithPgng" resultType="dataEntity">
		<include refid="ComPgng.pgngHeaderClause"/>
		SELECT * FROM (
			<include refid="evalList"/>
			<include refid="evalListWhere"/>
		) T1
		WHERE 1 = 1
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
		ORDER BY DYYYY DESC, TO_NUMBER(EV_SEQ) DESC
		<include refid="ComPgng.pgngTailClause"/>
	</select>
	<select id="evalListTotcnt" resultType="int">
		SELECT COUNT(1) FROM (
			<include refid="evalList"/>
			<include refid="evalListWhere"/>
		) T1
		WHERE 1 = 1
		AND ORG_ID = #{orgId, jdbcType=INTEGER}
	</select>
	<sql id="evalList">
		 SELECT	 DYYYY
				,EV_SEQ
				,EV_NAME
				,EV_TYPE
				,F_CDVAL_INQIRE('N00005', NVL(EV_TYPE, 'A')) AS EV_TYPE_NM
				,EXEC_DATE_F
				,EXEC_DATE_T
				,WORK_DATE_F
				,WORK_DATE_T
				,EV_STATE
				,ORG_ID
				,F_CDVAL_INQIRE('N00006', NVL(EV_STATE, 'A')) AS EV_STATE_NM
				,REMARK
		FROM	T_EV_MASTER
	</sql>
	<sql id="evalListWhere">
		<where>
		      <if test='dyyyy_sch != "" and dyyyy_sch != null '>
			     AND DYYYY = #{dyyyy_sch}
			  </if>
		       <if test='ev_name_sch != "" and ev_name_sch != null '>
			     AND EV_NAME like '%' ||#{ev_name_sch}|| '%'
		       </if>
		       <if test='ev_state_sch != "" and ev_state_sch != null '>
			     AND EV_STATE = #{ev_state_sch}
		       </if>
		       <if test='ev_type_sch != "" and ev_type_sch != null '>
			     AND EV_TYPE = #{ev_type_sch}
		       </if>
		</where>
	</sql>
	<!-- 평가결과업체 리스트 -->
	<select id="getT_ev_vendor_rslt_list" resultType="dataEntity">		
	SELECT   MMM.DYYYY AS DYYYY
			,MMM.EV_SEQ AS EV_SEQ
	   		,MMM.VENDOR_CODE AS VENDOR_CODE
	        ,MMM.SG_CODE AS SG_CODE
	        ,MMM.SG_NAME AS SG_NAME
 	        ,B.PRTNR_KOREAN_NM AS VENDOR_NAME
            ,B.RPRSNTV_NM  AS PRES_NAME
<!-- 	        ,(CASE WHEN MMM.TOT_RSLT_SCORE > 90 THEN
		            (SELECT VALID_CD
					FROM T_CO_CODE
					WHERE TYPE_CD ='X0070'
					AND	VALID_CD ='A'
                   	)
				ELSE
					(SELECT VALID_CD
					FROM T_CO_CODE
					WHERE TYPE_CD='X0070'
					AND SUBSTR(VALID_NM ,1, INSTR(VALID_NM, '-', 1,1)-1) &lt;= NVL(MMM.TOT_RSLT_SCORE,0)
					AND (SUBSTR(VALID_NM, INSTR(VALID_NM, '-', 1,1)+1 )+1)  > NVL(MMM.TOT_RSLT_SCORE,0)
					)
				 END
			) AS GRADE
 -->	        ,ROUND (MMM.TOT_RSLT_SCORE,2) AS TOT_RSLT_SCORE
	FROM 	(SELECT	   MM.DYYYY AS DYYYY
		              ,MM.EV_SEQ AS EV_SEQ
		              ,MM.VENDOR_CODE AS VENDOR_CODE
		              ,MM.SG_CODE AS SG_CODE
		              ,MM.SG_NAME AS SG_NAME
		              ,NVL(SUM(MM.RSLT_SCORE),0) AS TOT_RSLT_SCORE
		          FROM (
		               SELECT M.DYYYY
		                     ,M.EV_SEQ
		                     ,M.VENDOR_CODE
		                     ,M.SG_CODE
		                     ,M.SG_NAME
		                     ,M.EV_CODE1
		                     ,M.EV_NAME1
		                     ,M.DIST_SCORE
		                     ,M.EV_GUBUN1
		                     ,SUM(E.SCORE) AS EVAL_SCORE
		                     ,M.DIST_SCORE /100 *SUM(E.SCORE) AS RSLT_SCORE
		                     ,M.ORG_ID AS ORG_ID
		                 FROM (
		                      SELECT A.DYYYY
		                            ,A.EV_SEQ
		                            ,A.VENDOR_CODE
		                            ,A.SG_CODE
		                            ,A.SG_NAME
		                            ,A.ORG_ID 
		                            ,C.EV_CODE1
		                            ,C.EV_NAME1
		                            ,C.DIST_SCORE
		                            ,C.EV_GUBUN1
		                            ,D.EV_CODE2
		                            ,D.EV_NAME2
		                        FROM T_EV_VENDOR A
			                            ,T_EV_YYYY_CODE1 C
			                            ,T_EV_YYYY_CODE2 D
		                       WHERE A.DYYYY = C.DYYYY
		                         AND A.EV_SEQ = C.EV_SEQ
		                         AND A.ORG_ID = C.ORG_ID
		                         AND A.SG_CODE = C.SG_CODE
		                         AND C.DYYYY = D.DYYYY
		                         AND C.ORG_ID = D.ORG_ID
		                         AND C.EV_SEQ = D.EV_SEQ
		                         AND C.SG_CODE = D.SG_CODE
		                         AND C.EV_CODE1 = D.EV_CODE1
		                         AND C.EV_GUBUN2 = '1'

		                      ) M
		                     ,T_EV_VENDOR_CODE2 E
		                WHERE M.DYYYY = E.DYYYY(+)
		                  AND M.EV_SEQ = E.EV_SEQ(+)
		                  AND M.ORG_ID = E.ORG_ID(+)
		                  AND M.VENDOR_CODE = E.VENDOR_CODE(+)
		                  AND M.SG_CODE = E.SG_CODE(+)
		                  AND M.EV_CODE1 = E.EV_CODE1(+)
		                  AND M.EV_CODE2 = E.EV_CODE2(+)
		                  AND M.DYYYY = #{dyyyy}
		                  AND M.EV_SEQ = #{ev_seq}
		                  AND M.ORG_ID = #{orgId}
		               GROUP BY M.DYYYY
		                       ,M.EV_SEQ
		                       ,M.VENDOR_CODE
		                       ,M.SG_CODE
		                       ,M.SG_NAME
		                       ,M.EV_CODE1
		                       ,M.EV_NAME1
		                       ,M.DIST_SCORE
		                       ,M.EV_GUBUN1
		                       ,M.ORG_ID
		               )  MM
		        GROUP BY MM.DYYYY
		                ,MM.EV_SEQ
		                ,MM.VENDOR_CODE
		                ,MM.SG_CODE
		                ,MM.SG_NAME

		       ) MMM,
		       (SELECT * FROM TMUR_ENPA) B
    WHERE  MMM.VENDOR_CODE = B.ENTRPS_REGIST_NO
    ORDER BY TOT_RSLT_SCORE DESC, VENDOR_NAME
	</select>
	<select id="getT_ev_vendor_rslt_sub_list" resultType="dataEntity">
		SELECT M.DYYYY
              ,M.EV_SEQ
              ,M.VENDOR_CODE
              ,M.SG_CODE
              ,M.SG_NAME
              ,M.EV_CODE1 AS EV_CODE1
              ,M.EV_NAME1
              ,M.DIST_SCORE
              ,M.EV_GUBUN1
              ,M.ORG_ID
              ,ROUND (SUM(E.SCORE) ,2) AS EVAL_SCORE
              ,ROUND (M.DIST_SCORE /100 *SUM(E.SCORE) ,2) AS RSLT_SCORE
          FROM (
               SELECT A.DYYYY
                     ,A.EV_SEQ
                     ,A.VENDOR_CODE
                     ,A.SG_CODE
                     ,A.SG_NAME
                     ,C.EV_CODE1
                     ,C.EV_NAME1
                     ,C.DIST_SCORE
                     ,C.EV_GUBUN1
                     ,D.EV_CODE2
                     ,D.EV_NAME2
                     ,D.ORG_ID
                 FROM T_EV_VENDOR A
                     ,T_EV_YYYY_CODE1 C
                     ,T_EV_YYYY_CODE2 D
                WHERE A.DYYYY = C.DYYYY
                  AND A.EV_SEQ = C.EV_SEQ
                  AND A.SG_CODE = C.SG_CODE
                  AND C.DYYYY = D.DYYYY
                  AND C.EV_SEQ = D.EV_SEQ
                  AND C.SG_CODE = D.SG_CODE
                  AND C.EV_CODE1 = D.EV_CODE1
                  AND C.EV_GUBUN2 = '1'
                  AND C.ORG_ID = D.ORG_ID
                  AND C.ORG_ID = #{orgId}

               ) M
              ,T_EV_VENDOR_CODE2 E
         WHERE M.DYYYY = E.DYYYY(+)
           AND M.EV_SEQ = E.EV_SEQ(+)
           AND M.ORG_ID = E.ORG_ID(+)
           AND M.VENDOR_CODE = E.VENDOR_CODE(+)
           AND M.SG_CODE = E.SG_CODE(+)
           AND M.EV_CODE1 = E.EV_CODE1(+)
           AND M.EV_CODE2 = E.EV_CODE2(+)

           AND M.DYYYY = #{dyyyy}
           AND M.EV_SEQ = #{ev_seq}
           AND M.VENDOR_CODE = #{vendor_code}
           AND M.SG_CODE = #{sg_code}
           AND M.ORG_ID = #{orgId}
        GROUP BY M.DYYYY
                ,M.EV_SEQ
                ,M.VENDOR_CODE
                ,M.SG_CODE
                ,M.SG_NAME
                ,M.EV_CODE1
                ,M.EV_NAME1
                ,M.DIST_SCORE
                ,M.EV_GUBUN1
                ,M.ORG_ID 
        ORDER BY M.VENDOR_CODE,M.SG_CODE,M.EV_CODE1
	
	</select>
</mapper>